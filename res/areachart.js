var whaac_boundaries_dataname = my_ajax_object.whaac_boundaries_dataname;if (my_ajax_object.whaac_boundaries_appearance === '') {    var whaac_boundaries_appearance = '0.4';} else {    var whaac_boundaries_appearance = my_ajax_object.whaac_boundaries_appearance;}if (my_ajax_object.whaac_boundaries_fill === '') {    var whaac_boundaries_fill = 'origin';} else {    var whaac_boundaries_fill = my_ajax_object.whaac_boundaries_fill;}if (my_ajax_object.whaac_boundaries_color === '') {    var whaac_boundaries_color = '005BFF';} else {    var whaac_boundaries_color = my_ajax_object.whaac_boundaries_color;}if (my_ajax_object.whaac_boundaries_data === '') {    var whaac_boundaries_data = my_ajax_object.whaac_default_data;} else {    var whaac_boundaries_data = my_ajax_object.whaac_boundaries_data.replace(/([\]["])/g, '').split(",");}if (my_ajax_object.whaac_boundaries_x_labels === '') {    var whaac_boundaries_x_labels = my_ajax_object.whaac_default_x_labels;} else {    var whaac_boundaries_x_labels = my_ajax_object.whaac_boundaries_x_labels.replace(/([\]["])/g, '').split(",");}if (my_ajax_object.whaac_implode_data === '') {    var whaac_implode_data = my_ajax_object.whaac_default_implode_data} else {    var whaac_implode_data = my_ajax_object.whaac_implode_data;}if (my_ajax_object.whaac_grid_lines === '') {    var gridLines = true;} else {    var gridLines = my_ajax_object.whaac_grid_lines;}var utils = Samples.utils;var options = {    maintainAspectRatio: false,    spanGaps: false,    elements: {        line: {            tension: 0.000001        }    },    plugins: {        filler: {            propagate: false        }    },    scales: {        xAxes: [{            ticks: {                autoSkip: false,                maxRotation: 0            }        }]    }};if (gridLines === 'true') {    var gridLinesValue = gridLines;} else {    var gridLinesValue = false;}jQuery('input.whaac_grid_lines').click(function () {    if (jQuery(this).prop('checked')) {        gridLinesValue = true;    } else {        gridLinesValue = false;    }});var fill_val = whaac_boundaries_fill;jQuery('input.whaac_boundaries_fill').change(function () {    fill_val = jQuery(this).val();});var appearance_val = whaac_boundaries_appearance;jQuery('input.whaac_boundaries_appearance').change(function () {    appearance_val = jQuery(this).val();});var color = whaac_boundaries_color;jQuery('input.whaac_boundaries_color.jscolor').val('#' + color);jQuery('input.whaac_boundaries_color.jscolor').change(function () {    color = jQuery(this).val();});var yLabels = {};jQuery.each(whaac_implode_data, function (key, val) {    if ([val.value] != '') {        yLabels[val.key] = val.value    } else {        yLabels[val.key] = val.key    }});jQuery(document).ready(function () {    new Chart('boundaries', {        type: 'line',        data: {            labels: whaac_boundaries_x_labels,            datasets: [{                backgroundColor: utils.transparentize('#' + color),                borderColor: '#' + color,                data: whaac_boundaries_data,                label: whaac_boundaries_dataname,                fill: fill_val,                lineTension: appearance_val            }]        },        options: Chart.helpers.merge(options, {            scales: {                yAxes: [{                    gridLines: {                        display: true,                        drawBorder: true,                        drawOnChartArea: gridLinesValue                    },                    ticks: {                        stepSize: 1,                        callback: function (value, index, values) {                            return yLabels[value];                        }                    }                }],                xAxes: [{                    gridLines: {                        display: true,                        drawBorder: true,                        drawOnChartArea: gridLinesValue                    }                }]            }        })    });});